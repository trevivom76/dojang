# 다음과 같이 코드 실행 결과가 나오도록 코드의 빈칸을 완성한 전체 코드를 작성하세요.
#
# 실행 결과
# b : [1, 2, 3, 4, 5]
# c : ['a', 'b', 'c', 'd', 'e']
# d : [5, 'a']
# e : [1, 3, 5, 'b', 'd']
# f : [2, 4, 'a', 'c', 'e']
# 코드
# a = [1,2, 3, 4, 5, 'a', 'b', 'c', 'd', 'e']
#
# b = a[:5]
# print('b :',b)
#
# c = _________
# print('c :',c)
#
# d = __________
# print('d :',d)
#
# e = __________
# print('e :',e)
#
# f = _________
# print('f :',f)
# 핵심 잡기
# 리스트에서 부분 리스트를 잘라내는 것을 리스트 슬라이싱(list slicing)이라고 합니다. 문자열에서와 같은 방법으로 리스트도 부분 리스트를 뽑을 수 있습니다.
# a[1, 2, 3, 4, 5]에서 a[2:4]를 하면 인덱스 2번에서 인덱스 4-1, 즉 인덱스 3까지 리스트를 슬라이싱합니다. 즉, a[n1:n2]를 실행하면 인덱스 n1부터 n2-1까지 리스트를 잘라내는 것입니다.
# a[:3]과 같이 콜론(:) 앞에 아무것도 적지 않으면 처음, 즉 인덱스 0부터 잘라내라는 의미입니다. 반대로 a[1:]과 같이 콜론(:) 뒤에 아무것도 적지 않으면 인덱스 1부터 리스트 a 끝까지 모두 잘라내라는 의미입니다.
# a[n1:n2:n3]는 리스트 n1에서부터 n2 직전까지 잘라내되 n3만큼 점프하면서 리스트를 잘라내라는 의미입니다. 예를 들어 a=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]에서 a[3:9:2]를 하면, 인덱스 3번부터 8번까지 추출하지만, 3->5->7과 같이 2칸씩 점프하면서 잘라냅니다. 즉, a[3:9:2]는 리스트 [4,6,8]이 됩니다.

a = [1,2, 3, 4, 5, 'a', 'b', 'c', 'd', 'e']

b = a[:5]
print('b :',b)

c = a[5::]
print('c :',c)

d = a[4:6]
print('d :',d)

e = a[::2]
print('e :',e)

f = a[1::2]
print('f :',f)
